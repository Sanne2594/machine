/home/sanne/machine/sanne/machine/seq2seq/models/EncoderRNN.py:66: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters().
  output, hidden = self.rnn(embedded)
/home/sanne/.local/lib/python3.5/site-packages/torch/nn/modules/container.py:67: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)
Traceback (most recent call last):
  File "test-DC.py", line 181, in <module>
    loss, accuracy = test(data=all_data, model=DC, criterion=loss,batch_size=opt.batch_size,wrong=opt.print_wrong)
  File "test-DC.py", line 43, in test
    loss += criterion(output[i],target_variables[i].long())
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/variable.py", line 78, in __getitem__
    return Index.apply(self, key)
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/_functions/tensor.py", line 89, in forward
    result = i.index(ctx.index)
IndexError: index 4 is out of range for dimension 0 (of size 4)
/home/sanne/machine/sanne/machine/seq2seq/models/EncoderRNN.py:66: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters().
  output, hidden = self.rnn(embedded)
/home/sanne/.local/lib/python3.5/site-packages/torch/nn/modules/container.py:67: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)
Traceback (most recent call last):
  File "test-DC.py", line 181, in <module>
    loss, accuracy = test(data=all_data, model=DC, criterion=loss,batch_size=opt.batch_size,wrong=opt.print_wrong)
  File "test-DC.py", line 43, in test
    loss += criterion(output[i],target_variables[i].long())
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/variable.py", line 78, in __getitem__
    return Index.apply(self, key)
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/_functions/tensor.py", line 89, in forward
    result = i.index(ctx.index)
IndexError: index 4 is out of range for dimension 0 (of size 4)
Exception ignored in: <bound method DropoutDescriptor.__del__ of <torch.backends.cudnn.DropoutDescriptor object at 0x2b16f74c7208>>
Traceback (most recent call last):
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/backends/cudnn/__init__.py", line 238, in __del__
AttributeError: 'NoneType' object has no attribute 'cudnnDestroyDropoutDescriptor'
Exception ignored in: <bound method CuDNNHandle.__del__ of <torch.backends.cudnn.CuDNNHandle object at 0x2b16f74c71d0>>
Traceback (most recent call last):
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/backends/cudnn/__init__.py", line 114, in __del__
AttributeError: 'NoneType' object has no attribute 'cudnnDestroy'
/home/sanne/machine/sanne/machine/seq2seq/models/EncoderRNN.py:66: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters().
  output, hidden = self.rnn(embedded)
/home/sanne/.local/lib/python3.5/site-packages/torch/nn/modules/container.py:67: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)
Traceback (most recent call last):
  File "test-DC.py", line 181, in <module>
    loss, accuracy = test(data=all_data, model=DC, criterion=loss,batch_size=opt.batch_size,wrong=opt.print_wrong)
  File "test-DC.py", line 43, in test
    loss += criterion(output[i],target_variables[i].long())
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/variable.py", line 78, in __getitem__
    return Index.apply(self, key)
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/_functions/tensor.py", line 89, in forward
    result = i.index(ctx.index)
IndexError: index 4 is out of range for dimension 0 (of size 4)
/home/sanne/machine/sanne/machine/seq2seq/models/EncoderRNN.py:66: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters().
  output, hidden = self.rnn(embedded)
/home/sanne/.local/lib/python3.5/site-packages/torch/nn/modules/container.py:67: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)
Traceback (most recent call last):
  File "test-DC.py", line 181, in <module>
    loss, accuracy = test(data=all_data, model=DC, criterion=loss,batch_size=opt.batch_size,wrong=opt.print_wrong)
  File "test-DC.py", line 43, in test
    loss += criterion(output[i],target_variables[i].long())
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/variable.py", line 78, in __getitem__
    return Index.apply(self, key)
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/_functions/tensor.py", line 89, in forward
    result = i.index(ctx.index)
IndexError: index 4 is out of range for dimension 0 (of size 4)
Traceback (most recent call last):
  File "test-DC.py", line 160, in <module>
    filter_pred=len_filter
  File "/home/sanne/.local/lib/python3.5/site-packages/torchtext/data/dataset.py", line 161, in __init__
    with io.open(os.path.expanduser(path), encoding="utf8") as f:
FileNotFoundError: [Errno 2] No such file or directory: 'data/Data-loop/test4_cuisine_masks.txt'
/home/sanne/machine/sanne/machine/seq2seq/models/EncoderRNN.py:66: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters().
  output, hidden = self.rnn(embedded)
/home/sanne/.local/lib/python3.5/site-packages/torch/nn/modules/container.py:67: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)
Traceback (most recent call last):
  File "test-DC.py", line 181, in <module>
    loss, accuracy = test(data=all_data, model=DC, criterion=loss,batch_size=opt.batch_size,wrong=opt.print_wrong)
  File "test-DC.py", line 43, in test
    loss += criterion(output[i],target_variables[i].long())
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/variable.py", line 78, in __getitem__
    return Index.apply(self, key)
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/_functions/tensor.py", line 89, in forward
    result = i.index(ctx.index)
IndexError: index 4 is out of range for dimension 0 (of size 4)
/home/sanne/machine/sanne/machine/seq2seq/models/EncoderRNN.py:66: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters().
  output, hidden = self.rnn(embedded)
/home/sanne/.local/lib/python3.5/site-packages/torch/nn/modules/container.py:67: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)
Traceback (most recent call last):
  File "test-DC.py", line 181, in <module>
    loss, accuracy = test(data=all_data, model=DC, criterion=loss,batch_size=opt.batch_size,wrong=opt.print_wrong)
  File "test-DC.py", line 43, in test
    loss += criterion(output[i],target_variables[i].long())
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/variable.py", line 78, in __getitem__
    return Index.apply(self, key)
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/_functions/tensor.py", line 89, in forward
    result = i.index(ctx.index)
IndexError: index 4 is out of range for dimension 0 (of size 4)
/home/sanne/machine/sanne/machine/seq2seq/models/EncoderRNN.py:66: UserWarning: RNN module weights are not part of single contiguous chunk of memory. This means they need to be compacted at every call, possibly greatly increasing memory usage. To compact weights again call flatten_parameters().
  output, hidden = self.rnn(embedded)
/home/sanne/.local/lib/python3.5/site-packages/torch/nn/modules/container.py:67: UserWarning: Implicit dimension choice for log_softmax has been deprecated. Change the call to include dim=X as an argument.
  input = module(input)
Traceback (most recent call last):
  File "test-DC.py", line 181, in <module>
    loss, accuracy = test(data=all_data, model=DC, criterion=loss,batch_size=opt.batch_size,wrong=opt.print_wrong)
  File "test-DC.py", line 43, in test
    loss += criterion(output[i],target_variables[i].long())
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/variable.py", line 78, in __getitem__
    return Index.apply(self, key)
  File "/home/sanne/.local/lib/python3.5/site-packages/torch/autograd/_functions/tensor.py", line 89, in forward
    result = i.index(ctx.index)
IndexError: index 4 is out of range for dimension 0 (of size 4)
Exception ignored in: <function WeakValueDictionary.__init__.<locals>.remove at 0x2af1e6195e18>
Traceback (most recent call last):
  File "/usr/lib/python3.5/weakref.py", line 117, in remove
TypeError: 'NoneType' object is not callable
